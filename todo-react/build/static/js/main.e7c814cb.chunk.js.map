{"version":3,"sources":["TodoListItem.js","TodoList.js","Fecha.js","Formulario.js","UpdateTodoModal.js","App.js","index.js"],"names":["TodoListItem","props","todo","todoText","terminada","fecha","Date","idTodo","id","className","checked","type","onChange","getTodo","updateTodo","tareaCompletada","itemID","getDate","getMonth","getFullYear","onClick","openModal","editarTarea","deleteTodo","eliminarTarea","TodoList","todoList","todos","useState","showListValue","setShowListValue","contTodo","useRef","useEffect","current","e","selectHtml","target","optionSelect","options","selectedIndex","value","defaultValue","size","map","index","Fecha","onChangeDatePicker","datePickerValue","Formulario","todayDate","inputRef","onSubmit","event","preventDefault","firstChild","length","addTodo","ref","placeholder","autoComplete","onBlur","UpdateTodoModal","todoDate","todoTextValue","setTodoTextValue","focus","closeModal","App","List","setTodos","showModalUpdateTodo","setShowModalUpdateTodo","todoToBeUpdated","setTodoToBeUpdated","idTodoToBeUpdated","setIdTodoToBeUpdated","get","newTodo","auxTodos","sortTodoByDate","set","updateLocalStorage","localStorage","setItem","JSON","stringify","sort","val1","val2","date1","date2","todosStr","getItem","parse","forEach","push","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7c814cb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./TodoListItem.scss\";\r\n\r\nfunction TodoListItem(props) {\r\n  const todo = props.todoText;\r\n  const terminada = props.terminada;\r\n  const fecha = new Date(props.fecha);\r\n  const idTodo = props.id;\r\n\r\n  const tareaCompletada = (idTodo) => {\r\n    const todo = props.getTodo(idTodo);\r\n    props.updateTodo(idTodo, { ...todo, terminada: !todo.terminada });\r\n  };\r\n\r\n  const eliminarTarea = (idTodo) => props.deleteTodo(idTodo);\r\n  const editarTarea = (idTodo) => props.openModal(idTodo);\r\n\r\n  return (\r\n    <div className=\"elementoLista\">\r\n      <div className=\"checkbox-text\">\r\n        <input\r\n          checked={terminada}\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          onChange={() => tareaCompletada(idTodo)}\r\n        />\r\n        <div className=\"tarea-fecha\">\r\n          <h3\r\n            className={`${terminada && \"tarea-marcada\"}`}\r\n            itemID={`t${idTodo}`}\r\n          >\r\n            {todo}\r\n          </h3>\r\n          <h6\r\n            className={`${terminada && \"tarea-marcada\"}`}\r\n          >{`${fecha.getDate()}/${\r\n            fecha.getMonth() + 1\r\n          }/${fecha.getFullYear()}`}</h6>\r\n        </div>\r\n      </div>\r\n      <div className=\"actions-elemento-lista\">\r\n        <i\r\n          id=\"edit\"\r\n          className=\"fas fa-pencil-alt\"\r\n          onClick={() => editarTarea(idTodo)}\r\n        ></i>\r\n        <i\r\n          id=\"delete\"\r\n          className=\"fas fa-trash-alt\"\r\n          onClick={() => eliminarTarea(idTodo)}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoListItem;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nimport \"./TodoList.scss\";\r\nimport TodoListItem from \"./TodoListItem\";\r\n\r\nfunction TodoList(props) {\r\n  const todoList = props.todos;\r\n  const [showListValue, setShowListValue] = useState(\"todas\");\r\n  const contTodo = useRef(0);\r\n\r\n  useEffect(() => {\r\n    contTodo.current = 0;\r\n  });\r\n\r\n  return (\r\n    <div className=\"lista\">\r\n      <div className=\"mostrar-tareas\">\r\n        <select\r\n          onChange={(e) => {\r\n            const selectHtml = e.target;\r\n            const optionSelect =\r\n              selectHtml.options[selectHtml.selectedIndex].value;\r\n            setShowListValue(optionSelect);\r\n          }}\r\n        >\r\n          <option value=\"todas\" defaultValue=\"selected\">\r\n            Todas\r\n          </option>\r\n          <option value=\"completadas\">Completadas</option>\r\n          <option value=\"incompletas\">No Completadas</option>\r\n        </select>\r\n      </div>\r\n      {todoList.size === 0 ? (\r\n        <p id=\"vacio\">No tienes nada pendiente :)</p>\r\n      ) : (\r\n        todoList.map((todo, index) => {\r\n          if (\r\n            (showListValue === \"completadas\" && todo.terminada === true) ||\r\n            (showListValue === \"incompletas\" && todo.terminada === false) ||\r\n            showListValue === \"todas\"\r\n          ) {\r\n            contTodo.current = contTodo.current + 1;\r\n            return (\r\n              <TodoListItem\r\n                key={index}\r\n                todoText={todo.todoText}\r\n                terminada={todo.terminada}\r\n                fecha={todo.fecha}\r\n                id={index}\r\n                deleteTodo={props.deleteTodo}\r\n                updateTodo={props.updateTodo}\r\n                getTodo={props.getTodo}\r\n                openModal={props.openModal}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        })\r\n      )}\r\n      {todoList.size !== 0 &&\r\n        contTodo.current === 0 &&\r\n        showListValue === \"completadas\" && (\r\n          <p id=\"vacio\">No tienes tareas completadas :(</p>\r\n        )}\r\n      {todoList.size !== 0 &&\r\n        contTodo.current === 0 &&\r\n        showListValue === \"incompletas\" && (\r\n          <p id=\"vacio\">No tienes tareas incompletadas :)</p>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport DatePicker from \"react-date-picker\";\r\n\r\nimport \"./Fecha.scss\";\r\n\r\nconst Fecha = (props) => {\r\n  return (\r\n    <DatePicker\r\n      onChange={props.onChangeDatePicker}\r\n      value={props.datePickerValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Fecha;\r\n","import React from \"react\";\r\nimport { useRef, useState } from \"react\";\r\nimport Fecha from \"./Fecha\";\r\n\r\nimport \"./Formulario.scss\";\r\n\r\nconst Formulario = (props) => {\r\n  const todayDate = new Date();\r\n  const [datePickerValue, onChangeDatePicker] = useState(todayDate);\r\n  const inputRef = useRef();\r\n\r\n  const handleSubmitForm = (event) => {\r\n    event.preventDefault();\r\n    const todoText = event.target.firstChild.value;\r\n    if (todoText && todoText.length > 0) {\r\n      props.addTodo({\r\n        todoText: todoText,\r\n        terminada: false,\r\n        fecha: datePickerValue,\r\n      });\r\n    }\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form id=\"form\" onSubmit={handleSubmitForm}>\r\n        <input\r\n          ref={inputRef}\r\n          className=\"tarea\"\r\n          type=\"text\"\r\n          id=\"texto-tarea\"\r\n          placeholder=\"Tarea\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <div\r\n          className=\"date-picker\"\r\n          onBlur={() => {\r\n            if (datePickerValue === null) {\r\n              onChangeDatePicker(todayDate);\r\n            }\r\n          }}\r\n        >\r\n          <Fecha\r\n            datePickerValue={datePickerValue}\r\n            onChangeDatePicker={onChangeDatePicker}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"+\" id=\"agregar\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\n\r\nimport Fecha from \"./Fecha\";\r\n\r\nimport \"./UpdateTodoModal.scss\";\r\n\r\nconst UpdateTodoModal = (props) => {\r\n  const todoDate = new Date(props.todo.fecha);\r\n  const idTodo = props.idTodo;\r\n  const [todoTextValue, setTodoTextValue] = useState(props.todo.todoText);\r\n  const [datePickerValue, onChangeDatePicker] = useState(todoDate);\r\n  const inputRef = useRef();\r\n\r\n  const handleCancelButton = () => {\r\n    props.closeModal();\r\n  };\r\n  const handleConfirmButton = () => {\r\n    if (todoTextValue !== \"\" && datePickerValue !== null && idTodo !== -1) {\r\n      props.updateTodo(idTodo, {\r\n        todoText: todoTextValue,\r\n        terminada: false,\r\n        fecha: datePickerValue,\r\n      });\r\n      props.closeModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-header\">\r\n        <h3>EDITING TODO</h3>\r\n      </div>\r\n      <div className=\"modal-content\">\r\n        <input\r\n          className=\"tarea\"\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          defaultValue={props.todo.todoText}\r\n          onChange={() => setTodoTextValue(inputRef.current.value)}\r\n        ></input>\r\n        <div\r\n          className=\"date-picker\"\r\n          onBlur={() => {\r\n            if (datePickerValue === null) {\r\n              onChangeDatePicker(todoDate);\r\n            }\r\n          }}\r\n        >\r\n          <Fecha\r\n            datePickerValue={datePickerValue}\r\n            onChangeDatePicker={onChangeDatePicker}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <button id=\"cancelUpdate\" onClick={handleCancelButton}>\r\n          Cancel\r\n        </button>\r\n        <button id=\"confirmUpdate\" onClick={handleConfirmButton}>\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTodoModal;\r\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { List } from \"immutable\";\n\nimport TodoList from \"./TodoList\";\nimport Formulario from \"./Formulario\";\n\nimport \"./App.scss\";\nimport UpdateTodoModal from \"./UpdateTodoModal\";\n\nconst App = () => {\n  const [todos, setTodos] = useState(List);\n  const [showModalUpdateTodo, setShowModalUpdateTodo] = useState(false);\n  const [todoToBeUpdated, setTodoToBeUpdated] = useState({});\n  const [idTodoToBeUpdated, setIdTodoToBeUpdated] = useState(-1);\n\n  const addTodo = (todo) => {\n    const auxTodos = sortTodoByDate(todos.push(todo));\n    setTodos(auxTodos);\n    updateLocalStorage(auxTodos);\n  };\n  const deleteTodo = (index) => {\n    const auxTodos = todos.delete(index);\n    setTodos(auxTodos);\n    updateLocalStorage(auxTodos);\n  };\n  const getTodo = (index) => todos.get(index);\n  const updateTodo = (index, newTodo) => {\n    const auxTodos = sortTodoByDate(todos.set(index, newTodo));\n    setTodos(auxTodos);\n    updateLocalStorage(auxTodos);\n  };\n\n  const openModalUpdateTodo = (idTodo) => {\n    setIdTodoToBeUpdated(idTodo);\n    setShowModalUpdateTodo(true);\n    setTodoToBeUpdated(getTodo(idTodo));\n  };\n  const closeModalUpdateTodo = () => {\n    setShowModalUpdateTodo(false);\n  };\n\n  const updateLocalStorage = (todos) => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const sortTodoByDate = (todoList) => {\n    const todoListSorted = todoList.sort((val1, val2) => {\n      const date1 = new Date(val1.fecha);\n      const date2 = new Date(val2.fecha);\n      if (date1 < date2) {\n        return -1;\n      }\n      if (date1 > date2) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return todoListSorted;\n  };\n\n  useEffect(() => {\n    const todosStr = localStorage.getItem(\"todos\");\n    if (todosStr && todosStr.length > 0) {\n      const todos = JSON.parse(todosStr);\n      let auxTodos = List();\n      todos.forEach((todo) => {\n        auxTodos = auxTodos.push(todo);\n      });\n      setTodos(sortTodoByDate(auxTodos));\n    }\n  }, []);\n\n  return (\n    <div className=\"contenedor\">\n      {!showModalUpdateTodo ? (\n        <>\n          <Formulario addTodo={addTodo} />\n          <TodoList\n            todos={todos}\n            deleteTodo={deleteTodo}\n            updateTodo={updateTodo}\n            getTodo={getTodo}\n            openModal={openModalUpdateTodo}\n          />\n        </>\n      ) : (\n        <UpdateTodoModal\n          closeModal={closeModalUpdateTodo}\n          todo={todoToBeUpdated}\n          idTodo={idTodoToBeUpdated}\n          updateTodo={updateTodo}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}